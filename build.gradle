/*
 * This file was generated by the Gradle 'init' task.
 */

allprojects {
    group = 'com.worldline.sips'
    version = '1.1.0-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    sourceCompatibility = '1.8'

    task sourceJar(type: Jar) {
        classifier "sources"
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier "javadoc"
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourceJar
        archives javadocJar
    }
    
    signing {
        useGpgCmd()
        sign configurations.archives
    }

    test {
        // show standard out and standard error of the test JVM(s) on the console
        testLogging.showStandardStreams = true
    }

    publishing {
        publications {
            maven(MavenPublication) {
                customizePom(pom)
                from(components.java)
                // create the sign pom artifact
                pom.withXml {
                    def pomFile = file("${project.buildDir}/generated-pom.xml")
                    writeTo(pomFile)
                    def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                    artifact(pomAscFile) {
                        classifier = null
                        extension = 'pom.asc'
                    }
                }

                artifact(sourceJar) {
                    classifier = 'sources'
                }
                artifact(javadocJar) {
                    classifier = 'javadoc'
                }

                // create the signed artifacts
                project.tasks.signArchives.signatureFiles.each {
                    artifact(it) {
                        def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                        if (matcher.find()) {
                            classifier = matcher.group(1)
                        } else {
                            classifier = null
                        }
                        extension = 'jar.asc'
                    }
                }
            }
        }
        repositories {
            maven {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }

}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'This library simplifies the use of SIPS 2.0, the Worldline e-payments API'
            name 'SIPS SDK'
            url 'https://github.com/worldline/sips-sdk-java/'
            organization {
                name 'Worldline'
                url 'https://worldline.com'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/worldline/sips-sdk-java/issues'
            }
            licenses {
                license {
                    name 'MIT'
                    url 'https://opensource.org/licenses/MIT'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/worldline/sips-sdk-java'
                connection 'scm:git:git://github.com/worldline/sips-sdk-java.git'
                developerConnection 'scm:git:ssh://git@github.com:worldline/sips-sdk-java.git'
            }
            developers {
                developer {
                    name 'Support SIPS Benelux'
                    mail 'supportsips-benelux@wordline.com'
                }
            }
        }
    }
}
